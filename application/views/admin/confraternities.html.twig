{#
    Filename    : confraternities.html.twig
    Location    : application/views/admin/confraternities.html.twig
    Purpose     : Confraternities partial page
    Created     : 07/31/2019 16:00:09 by Scarlet Witch
    Updated     : 09/02/2019 16:30:39 by Spiderman
    Changes     : 
#}

{% extends 'admin/base.html.twig' %}

{% block title %} {{ page_title }} | Mount Carmel {% endblock %}

{% block contents %}
    <div class="row">
        <div id="media" class="col-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                    <div class="clearfix">
                        <form class="form-inline float-right mt-1 d-none d-md-flex">
                            <a class="btn btn-brown mr-2" data-toggle="modal" href="#create">
                                <i class="align-middle" data-feather="plus"></i> Add New
                            </a>
                            <a id="reload" class="btn btn-brown" href="javascript:void(0)">
                                <i class="align-middle" data-feather="rotate-ccw"></i> Reload
                            </a>
                        </form>
                        <h3 class="card-title mb-2">{{ page_title }}</h3>
                        <h4 class="card-subtitle">{{ page_subtitle }}</h4>
                    </div>
                </div>
                <div class="card-body">
                    <table id="datatables__default" class="table table-striped" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Created</th>
                                <th>Modified</th>                                                                                    
                                <th>Modified By</th>
                                <th>Status</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block createModalForm %}
    <form id="create-form">
        <div class="modal-body px-5">
            <div id="ajax-preloader"></div>
            <div id="ajax-response"></div>
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="status-id">Status</label>
                        <select class="form-control" id="status-id" name="status_id">
                            <!-- This is where the status load -->
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" class="form-control" id="name" name="name" value="{{ set_value('name') }}" placeholder="">
            </div>
            <div class="form-group">
                <label for="address-1">Address 1</label>
                <input type="text" class="form-control" id="address-1" name="address_1" value="{{ set_value('address_1') }}" placeholder="">
            </div>
            <div class="form-group">
                <label for="address-2">Address 2</label>
                <input type="text" class="form-control" id="address-2" name="address_2" value="{{ set_value('address_2') }}" placeholder="">
            </div>
            <div class="row">
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="city">City</label>
                        <select class="form-control" id="city" name="city">
                            <option value="" selected>&dash;</option>
                            <!-- This is where the cities load -->
                        </select>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="province">Province</label>
                        <select class="form-control" id="province" name="province">
                            <option value="" selected>&dash;</option>
                            <!-- This is where the provinces load -->
                        </select>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="country">Country</label>
                        <select class="form-control" id="country" name="country">
                            <option value="" selected>&dash;</option>
                            <!-- This is where the countries load -->
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="birthdate">Birthdate</label>
                <input type="text" class="form-control flatpickrCalendar" id="birthdate" name="birthdate" value="{{ set_value('birthdate') }}" placeholder="">
            </div>
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="landline">Landline</label>
                        <input type="text" class="form-control" id="landline" name="landline" value="{{ set_value('landline') }}" placeholder="">
                    </div>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="mobile">Mobile</label>
                        <input type="text" class="form-control" id="mobile" name="mobile" value="{{ set_value('mobile') }}" placeholder="">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="text" class="form-control" id="email" name="email" value="{{ set_value('email') }}" placeholder="">
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-lg btn-brown rounded-pill px-5 btn-change-state">Publish</button>
        </div>
    </form>
{% endblock %}

{% block updateModalForm %}
    <form id="update-form">
        <div class="modal-body px-5">
            <div id="ajax-preloader"></div>
            <div id="ajax-response"></div>
            <input type="hidden" name="id">
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="status-id">Status</label>
                        <select class="form-control" id="status-id" name="status_id">
                            <!-- This is where the status load -->
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" class="form-control" id="name" name="name" placeholder="">
            </div>
            <div class="form-group">
                <label for="address-1">Address 1</label>
                <input type="text" class="form-control" id="address-1" name="address_1" placeholder="">
            </div>
            <div class="form-group">
                <label for="address-2">Address 2</label>
                <input type="text" class="form-control" id="address-2" name="address_2" placeholder="">
            </div>
            <div class="row">
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="city">City</label>
                        <select class="form-control" id="city" name="city">
                            <!-- This is where the city load -->
                        </select>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="province">Province</label>
                        <select class="form-control" id="province" name="province">
                            <!-- This is where the province load -->
                        </select>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="form-group">
                        <label for="country">Country</label>
                        <select class="form-control" id="country" name="country">
                            <!-- This is where the country load -->
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="birthdate">Birthdate</label>
                <input type="text" class="form-control flatpickrCalendar" id="birthdate" name="birthdate" placeholder="">
            </div>
            <div class="row">
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="landline">Landline</label>
                        <input type="text" class="form-control" id="landline" name="landline" placeholder="">
                    </div>
                </div>
                <div class="col-12 col-lg-6">
                    <div class="form-group">
                        <label for="mobile">Mobile</label>
                        <input type="text" class="form-control" id="mobile" name="mobile" placeholder="">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="text" class="form-control" id="email" name="email" placeholder="">
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-lg btn-brown rounded-pill px-5 btn-change-state">Update</button>
        </div>
    </form>
{% endblock %}

{% block custom_scripts %}
    <script>
        $(function () {

            let baseURL = location.origin.toLowerCase() + '/mountcarmel.web';       
            let apiURL = location.origin.toLowerCase() + '/mountcarmel.api';                

            let isProcessing = false;

            // GET: Display all
            let getAll = {
                init: function() {
                    this.displayTable();
                    this.reloadTable();
                },
                displayTable: function() {
                    let table = $('#datatables__default').DataTable({
                        "processing": true,
                        "serverSide": false,
                        "responsive": true,
                        "ajax": {
                            "url": baseURL + "/admin/confraternities/confraternities",
                            "type": "GET"
                        },
                        "columns": [
                            {
                                "searchable": false,
                                "data": null
                            },
                            {"data": "name"},
                            {
                                "data": "dt_created",
                                "mRender": function(data) {
                                    return (data === null) ?  '' : moment(data).format('lll');
                                }
                            },
                            {
                                "data": "dt_updated",
                                "mRender": function(data) {
                                    return (data === null) ?  '' : moment(data).format('lll');
                                }
                            },                              
                            {"data": "updated_by"},
                            {
                                "data": {
                                    "status_id": "status_id",
                                    "status_name": "status_name"
                                },
                                "mRender": function(data) {
                                    let n = parseInt(data.status_id);
                                    switch(n) {
                                        case 1: {
                                            return '<span class="badge badge-pill badge-primary">' + data.status_name + '</span>';
                                            break;
                                        }
                                        case 2: {
                                            return '<span class="badge badge-pill badge-success">' + data.status_name + '</span>';
                                            break;
                                        }
                                        case 3: {
                                            return '<span class="badge badge-pill badge-danger">' + data.status_name + '</span>';
                                            break;
                                        }
                                        default: {
                                            return '<span class="badge badge-pill badge-secondary">' + data.status_name + '</span>';
                                            break;
                                        }
                                    }
                                }
                            },
                            {
                                "searchable": false,
                                "data": "id",
                                "mRender": function (data) {
                                    return '<a href="#update" data-toggle="modal" data-id="' + data + '" title="Update" ><i class="align-middle material-icons md-22">mode_edit</i></a>';
                                }
                            },
                            {
                                "searchable": false,
                                "data": "id",
                                "mRender": function (data) {
                                    return '<a href="#delete" data-toggle="modal" data-id="' + data + '" title="Delete"><i class="align-middle material-icons md-22">remove_circle_outline</i></a>';
                                }
                            }
                        ],
                        "lengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
                        "order": [[2, "desc"]],
                        "columnDefs": [
                            {"orderable": false, "targets": [0, 6, 7]}
                        ]
                    });

                    table.on('order.dt search.dt', function() {
                        table.column(0, {search:'applied', order:'applied'}).nodes().each(function(cell, i) {
                            cell.innerHTML = i + 1;
                        });
                    }).draw();
                },
                reloadTable: function() {
                    $('#reload').on('click', function (e) {
                        $('#datatables__default').DataTable().ajax.reload(null, true); // user paging will reset on reload				                                
                        e.preventDefault();
                    })
                }
            }

            // GET: Display by id
            let getById = {
                init: function() {
                    this.resetForm();
                    this.displayForm();
                },
                resetForm: function() {
                    $('#update').on('hidden.bs.modal', function(){
                        
                        let _this = $(this);

                        _this.find('form')[0].reset();
                        _this.find('.form-control').removeClass('is-invalid');
                        _this.find('.custom-select').removeClass('is-invalid');
                        _this.find('option:selected').remove();
                        _this.find('#ajax-response').empty();
                    });
                },
                displayForm: function() {
                    $('#update').on('show.bs.modal', function (e) {
                        
                        let _this = $(this);
                        let id = $(e.relatedTarget).attr('data-id');

                        let jqXHR = $.ajax({
                            url: baseURL + '/admin/confraternities/confraternity/?id=' + id,
                            type: 'GET',
                            dataType: 'json',
                            data: _this.serialize(),
                            cache: false,
                            processData: false,
                            beforeSend: function () {
                                _this.find('#ajax-preloader').preloader().show();
                            }
                        });

                        jqXHR.done(function (data) {
                            if (data) {
                                // Populate form
                                _this.find('input:hidden[name="id"]').val(data.id);                                    
                                _this.find('select[name="status_id"]').append('<option value="' + data.status_id + '" selected>' + data.status_name + '</option>'); 
                                _this.find('input[name="name"]').val(data.name);
                                _this.find('input[name="address_1"]').val(data.address_1);
                                _this.find('input[name="address_2"]').val(data.address_2);
                                _this.find('select[name="city"]').append('<option value="' + data.city_code + '" selected>' + data.city_name + '</option>'); 
                                _this.find('select[name="province"]').append('<option value="' + data.province_code + '" selected>' + data.province_name + '</option>'); 
                                 _this.find('select[name="country"]').append('<option value="' + data.country_code + '" selected>' + data.country_name + '</option>'); 
                                _this.find('input[name="birthdate"]').val(data.birthdate);
                                _this.find('input.input').val(moment(data.birthdate, 'YYYY-MM-DD').format('MMMM DD, YYYY'));
                                _this.find('input[name="landline"]').val(data.landline);
                                _this.find('input[name="mobile"]').val(data.mobile);
                                _this.find('input[name="email"]').val(data.email);
                            }
                        });

                        jqXHR.always(function () {
                            _this.find('#ajax-preloader').preloader().hide();
                        });

                        jqXHR.fail(function (jqXHR, textStatus, errorThrown) {
                            console.log('The following error occurred: ' + textStatus, errorThrown);
                        });
                    });
                }
            }

            // POST: Add new
            let create = {
                init: function() {
                    this.resetForm();
                    this.autoFocus();
                    this.bindForm();
                },
                resetForm: function() {
                    $('#create').on('hidden.bs.modal', function(){

                        let _this = $(this);

                        _this.find('form')[0].reset();
                        _this.find('.form-control').removeClass('is-invalid');
                        _this.find('.custom-select').removeClass('is-invalid');
                        _this.find('#ajax-response').empty();
                    });
                },
                autoFocus: function() {
                    $('#create').on('shown.bs.modal', function(){
                        $(this).find('input[name="name"]').trigger('focus');
                    }) 
                },
                bindForm: function () {
                    $('#create').on('show.bs.modal', this.submitForm());
                },
                submitForm: function() {

                    // Prevent multiple ajax request
                    if (isProcessing) return;
                    isProcessing = true;

                    $('#create-form').on('submit', function(e){

                        let _this = $(this);

                        let jqXHR = $.ajax({
                            url: baseURL + '/admin/confraternities/create',
                            type: 'POST',
                            dataType: 'json',
                            data: _this.serialize(),
                            cache: false,
                            processData: false,
                            beforeSend: function () {
                                _this.find('#ajax-preloader').preloader().show();
                                _this.find('.btn-change-state').attr('disabled', 'disabled');
                            }
                        });

                        jqXHR.done(function (data) {
                            if (data.status === true) {
                                // Reload datatables
                                $('#datatables__default').DataTable().ajax.reload(null, false); // user paging is not reset on reload

                                // Hide this modal
                                $('#create').modal('hide');

                                // Show and append notif msg  
                                $('#notif').modal('show').find('.modal-body p').text('A new confraternity has been published');
                                    
                                // Hide notif after (x) number of seconds 
                                setTimeout(function(){ 
                                    $('#notif').modal('hide');
                                }, 3000);
                            } else {
                                // Error msg response
                                _this.find('#ajax-response').html('<div class="alert alert-danger"><ul>' + data.message + '</ul></div>');
                                (Boolean(data.status_id)) ? _this.find('#status-id').addClass('is-invalid') : _this.find('#status-id').removeClass('is-invalid'); 
                                (Boolean(data.name)) ? _this.find('#name').addClass('is-invalid') : _this.find('#name').removeClass('is-invalid');  
                                (Boolean(data.address_1)) ? _this.find('#address-1').addClass('is-invalid') : _this.find('#address-1').removeClass('is-invalid');  
                                (Boolean(data.address_2)) ? _this.find('#address-2').addClass('is-invalid') : _this.find('#address-2').removeClass('is-invalid');  
                                (Boolean(data.city)) ? _this.find('span[aria-labelledby="select2-city-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-city-container"]').removeAttr('style');  
                                (Boolean(data.province)) ? _this.find('span[aria-labelledby="select2-province-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-province-container"]').removeAttr('style');
                                (Boolean(data.country)) ? _this.find('span[aria-labelledby="select2-country-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-country-container"]').removeAttr('style');
                                (Boolean(data.birthdate)) ? _this.find('#birthdate + .input').addClass('is-invalid') : _this.find('#birthdate + .input').removeClass('is-invalid');  
                                (Boolean(data.landline)) ? _this.find('#landline').addClass('is-invalid') : _this.find('#landline').removeClass('is-invalid');  
                                (Boolean(data.mobile)) ? _this.find('#mobile').addClass('is-invalid') : _this.find('#mobile').removeClass('is-invalid'); 
                                (Boolean(data.email)) ? _this.find('#email').addClass('is-invalid') : _this.find('#email').removeClass('is-invalid');  
                            }
                        });

                        jqXHR.always(function () {
                            _this.find('#ajax-preloader').preloader().hide();
                            _this.find('.btn-change-state').removeAttr('disabled');
                        });

                        jqXHR.fail(function (jqXHR, textStatus, errorThrown) {
                            console.log('The following error occurred: ' + textStatus, errorThrown);
                        });

                        e.preventDefault();
                    });
                }
            }

            // PUT: Update
            let update = {
                init: function() {
                    this.bindForm();
                },
                bindForm: function () {
                    $('#update').on('show.bs.modal', this.submitForm());
                },
                submitForm: function() {
                    $('#update-form').on('submit', function(e){
                        
                        let _this = $(this);
                        let id = _this.find('input:hidden[name="id"]').val();

                        let jqXHR = $.ajax({
                            url: baseURL + '/admin/confraternities/update/id/' + id,
                            type: 'PUT',
                            dataType: 'json',
                            data: _this.serialize(),
                            cache: false,
                            processData: false,
                            beforeSend: function () {
                                _this.find('#ajax-preloader').preloader().show();
                                _this.find('.btn-change-state').attr('disabled', 'disabled');
                            }
                        });

                        jqXHR.done(function (data) {
                            if (data.status === true) {
                                // Reload datatables
                                $('#datatables__default').DataTable().ajax.reload(null, false); // user paging is not reset on reload

                                // Hide this modal
                                $('#update').modal('hide');

                                // Show and append notif msg  
                                $('#notif').modal('show').find('.modal-body p').text('Confraternity #' + id + ' has been updated');
                                
                                // Hide notif after (x) number of seconds 
                                setTimeout(function(){ 
                                    $('#notif').modal('hide');
                                }, 3000);
                            } else {
                                // Error msg response
                                _this.find('#ajax-response').html('<div class="alert alert-danger"><ul>' + data.message + '</ul></div>');
                                (Boolean(data.status_id)) ? _this.find('#status-id').addClass('is-invalid') : _this.find('#status-id').removeClass('is-invalid'); 
                                (Boolean(data.name)) ? _this.find('#name').addClass('is-invalid') : _this.find('#name').removeClass('is-invalid');  
                                (Boolean(data.address_1)) ? _this.find('#address-1').addClass('is-invalid') : _this.find('#address-1').removeClass('is-invalid');  
                                (Boolean(data.address_2)) ? _this.find('#address-2').addClass('is-invalid') : _this.find('#address-2').removeClass('is-invalid');  
                                (Boolean(data.city)) ? _this.find('span[aria-labelledby="select2-city-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-city-container"]').removeAttr('style');  
                                (Boolean(data.province)) ? _this.find('span[aria-labelledby="select2-province-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-province-container"]').removeAttr('style');
                                (Boolean(data.country)) ? _this.find('span[aria-labelledby="select2-country-container"]').css({'border':'1px solid #d9534f'}) : _this.find('span[aria-labelledby="select2-country-container"]').removeAttr('style');
                                (Boolean(data.birthdate)) ? _this.find('#birthdate + .input').addClass('is-invalid') : _this.find('#birthdate + .input').removeClass('is-invalid');  
                                (Boolean(data.landline)) ? _this.find('#landline').addClass('is-invalid') : _this.find('#landline').removeClass('is-invalid');  
                                (Boolean(data.mobile)) ? _this.find('#mobile').addClass('is-invalid') : _this.find('#mobile').removeClass('is-invalid'); 
                                (Boolean(data.email)) ? _this.find('#email').addClass('is-invalid') : _this.find('#email').removeClass('is-invalid');  
                            }  
                        });

                        jqXHR.always(function () {
                            _this.find('#ajax-preloader').preloader().hide();
                            _this.find('.btn-change-state').removeAttr('disabled');
                        });

                        jqXHR.fail(function (jqXHR, textStatus, errorThrown) {
                            console.log('The following error occurred: ' + textStatus, errorThrown);
                        });

                        e.preventDefault();
                    });
                }
            }

            // PUT: Delete
            let softDelete = {
                init: function() {
                    this.bindForm();
                },
                bindForm: function () {
                    $('#delete').on('show.bs.modal', this.submitForm(), function(e){
                        $(this).find('input:hidden[name="id"]').val($(e.relatedTarget).attr('data-id'));
                        $(this).find('.modal-body p').text('Are you sure you want to delete confraternity #' + $(e.relatedTarget).attr('data-id') + '?');
                    });
                },
                submitForm: function() {
                    $('#delete-form').on('submit', function(e){
                        
                        let _this = $(this);
                        let id = _this.find('input:hidden[name="id"]').val();
                    
                        let jqXHR = $.ajax({
                            url: baseURL + '/admin/confraternities/delete/id/' + id,
                            type: 'PUT',
                            dataType: 'json',
                            data: _this.serialize(),
                            cache: false,
                            processData: false,
                            beforeSend: function () {
                                _this.find('#ajax-preloader').preloader().show();
                                _this.find('.btn-change-state').attr('disabled', 'disabled');
                            }
                        });

                        jqXHR.done(function (data) {
                            if (data.status === true) {
                                // Reload datatables
                                $('#datatables__default').DataTable().ajax.reload(null, false); // user paging is not reset on reload

                                // Hide this modal
                                $('#delete').modal('hide');

                                // Show and append notif msg  
                                $('#notif').modal('show').find('.modal-body p').text('Confraternity #' + id + ' has been moved to trash');
                                    
                                // Hide notif after (x) number of seconds 
                                setTimeout(function(){ 
                                    $('#notif').modal('hide');
                                }, 3000);
                            }
                        });

                        jqXHR.always(function () {
                            _this.find('#ajax-preloader').preloader().hide();
                            _this.find('.btn-change-state').removeAttr('disabled');
                        });

                        jqXHR.fail(function (jqXHR, textStatus, errorThrown) {
                            console.log('The following error occurred: ' + textStatus, errorThrown);
                        });

                        e.preventDefault();
                    });
                }
            }

            getAll.init();
            getById.init();
            create.init();
            update.init();
            softDelete.init();
        })
    </script>
{% endblock %}